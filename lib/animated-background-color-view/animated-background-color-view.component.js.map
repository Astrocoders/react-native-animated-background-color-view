{"version":3,"sources":["../../src/animated-background-color-view/animated-background-color-view.component.js"],"names":["styles","StyleSheet","create","container","flex","AnimatedBackgroundColorView","props","initialColor","color","currentColor","animation","Animated","Value","state","animate","bind","getBackgroundColor","shouldAnimate","backgroundColor","interpolate","inputRange","outputRange","delay","duration","easing","setValue","timing","toValue","start","setState","children","style","viewStyle","Component","defaultProps","Easing","out","exp"],"mappings":"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","sourcesContent":["import { Animated, Easing, StyleSheet, ViewPropTypes } from 'react-native';\nimport React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst styles = StyleSheet.create({\n  container: { flex: 1 }\n});\n\nexport class AnimatedBackgroundColorView extends Component {\n  static propTypes = {\n    children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n    color: PropTypes.string,\n    delay: PropTypes.number,\n    duration: PropTypes.number,\n    easing: PropTypes.func,\n    initialColor: PropTypes.string,\n    style: ViewPropTypes.style\n  };\n\n  static defaultProps = {\n    children: null,\n    color: '#00aced',\n    delay: 0,\n    duration: 2400,\n    easing: Easing.out(Easing.exp),\n    initialColor: null,\n    style: null\n  };\n\n  constructor(props) {\n    super(props);\n    const { initialColor, color } = props;\n\n    const currentColor = initialColor || color;\n\n    this.animation = new Animated.Value(0);\n    this.state = { currentColor };\n\n    this.animate = this.animate.bind(this);\n    this.getBackgroundColor = this.getBackgroundColor.bind(this);\n    this.shouldAnimate = this.shouldAnimate.bind(this);\n  }\n\n  componentDidMount() {\n    this.animate();\n  }\n\n  componentDidUpdate() {\n    this.animate();\n  }\n\n  getBackgroundColor() {\n    const { color } = this.props;\n    const { currentColor } = this.state;\n\n    const backgroundColor = this.animation.interpolate({\n      inputRange: [0, 1],\n      outputRange: [currentColor, color]\n    });\n\n    return { backgroundColor };\n  }\n\n  shouldAnimate() {\n    const { color } = this.props;\n    const { currentColor } = this.state;\n\n    return color !== currentColor;\n  }\n\n  animate() {\n    if (!this.shouldAnimate()) return;\n\n    const { color, delay, duration, easing } = this.props;\n\n    this.animation.setValue(0);\n\n    Animated.timing(this.animation, {\n      delay,\n      duration,\n      easing,\n      toValue: 1\n    }).start(() => {\n      this.setState({ currentColor: color });\n    });\n  }\n\n  render() {\n    const { children, style } = this.props;\n\n    const backgroundColor = this.getBackgroundColor();\n    const viewStyle = [styles.container, style, backgroundColor];\n\n    return <Animated.View style={viewStyle}>{children}</Animated.View>;\n  }\n}\n"],"file":"animated-background-color-view.component.js"}